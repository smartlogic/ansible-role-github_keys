---
- name: Setup members array
  set_fact:
    github_members: []

- name: Create the {{ github_keys_install_user }} user
  user:
    name: "{{ github_keys_install_user }}"
    shell: /bin/bash
    password: "*"
  become: true
  when: github_keys_create_install_user

- name: Create ssh folder for {{ github_keys_install_user }}
  file:
    path: /home/{{ github_keys_install_user }}/.ssh
    state: directory
    mode: 0700
    owner: "{{ github_keys_install_user }}"
    group: "{{ github_keys_install_user }}"
  become: true
  become_user: "{{ github_keys_install_user }}"

- name: Clear ssh grouping folder for {{ github_keys_install_user }} if forced
  file:
    path: /home/{{ github_keys_install_user }}/.ssh/source_keys
    state: absent
  become: true
  become_user: "{{ github_keys_install_user }}"
  when: github_keys_force_refresh

- name: Create ssh grouping folder for {{ github_keys_install_user }}
  file:
    path: /home/{{ github_keys_install_user }}/.ssh/source_keys
    state: directory
    mode: 0700
    owner: "{{ github_keys_install_user }}"
    group: "{{ github_keys_install_user }}"
  become: true
  become_user: "{{ github_keys_install_user }}"

- name: Clear old org folders
  file:
    path: /home/{{ github_keys_install_user }}/.ssh/{{ github_keys_github_org }}_keys
    state: absent
  become: true
  become_user: "{{ github_keys_install_user }}"
  with_items: "{{ github_keys_github_orgs }}"
  loop_control:
    loop_var: github_keys_github_org

- include: org_keys.yml
  with_items: "{{ github_keys_github_orgs }}"
  loop_control:
    loop_var: github_keys_github_org

- name: Add github users by username
  set_fact:
    github_members: "{{ github_members | union(github_keys_github_users) }}"

- name: Existing keys
  find:
    paths: /home/{{ github_keys_install_user }}/.ssh/source_keys
    patterns: "*.keys"
  register: existing_keys_raw

- name: Github Users lowercased
  set_fact:
    github_members: "{{ github_members | map('lower') | list }}"

- name: Existing usernames
  set_fact:
    existing_keys: "{{ existing_keys_raw.files | map(attribute='path') | map('regex_replace', '.*/(.*).keys', '\\1') | list }}"

- name: Get keys
  get_url:
    url: "https://github.com/{{ item }}.keys"
    dest: "/home/{{ github_keys_install_user }}/.ssh/source_keys/{{ item }}.keys"
    owner: "{{ github_keys_install_user }}"
    group: "{{ github_keys_install_user }}"
  with_items: "{{ github_members }}"
  become: true

- name: Clear keys that should no longer have access
  file:
    path: "/home/{{ github_keys_install_user }}/.ssh/source_keys/{{ item }}.keys"
    state: absent
  become: true
  become_user: "{{ github_keys_install_user }}"
  with_items: "{{ existing_keys | difference(github_members) }}"

- name: assemble additional keys into single file for {{ github_keys_install_user }}
  template:
    src: templates/additional_keys.j2
    dest: /home/{{ github_keys_install_user }}/.ssh/source_keys/_additional_keys
    owner: "{{ github_keys_install_user }}"
    group: "{{ github_keys_install_user }}"
  become: true

- name: assemble keys into single authorized keys file for {{ github_keys_install_user }}
  assemble:
    backup: yes
    src: /home/{{ github_keys_install_user }}/.ssh/source_keys
    dest: /home/{{ github_keys_install_user }}/.ssh/authorized_keys
    owner: "{{ github_keys_install_user }}"
    group: "{{ github_keys_install_user }}"
  become: true
